//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace OldDatabaseRestore.Module.BusinessObjects.BCI_Database_V2A2013
{

    public partial class SL_Main : XPLiteObject
    {
        Guid fSL_Main_ID;
        [Key(true)]
        [ColumnDbDefaultValue("(newid())")]
        public Guid SL_Main_ID
        {
            get { return fSL_Main_ID; }
            set { SetPropertyValue<Guid>(nameof(SL_Main_ID), ref fSL_Main_ID, value); }
        }
        string fAccount_Number_Main;
        [Size(25)]
        public string Account_Number_Main
        {
            get { return fAccount_Number_Main; }
            set { SetPropertyValue<string>(nameof(Account_Number_Main), ref fAccount_Number_Main, value); }
        }
        pl_Address_ShipType fAddress_ShipType;
        [Association(@"SL_MainReferencespl_Address_ShipType")]
        public pl_Address_ShipType Address_ShipType
        {
            get { return fAddress_ShipType; }
            set { SetPropertyValue<pl_Address_ShipType>(nameof(Address_ShipType), ref fAddress_ShipType, value); }
        }
        string fName;
        [Size(50)]
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>(nameof(Name), ref fName, value); }
        }
        string fAddress;
        [Size(50)]
        public string Address
        {
            get { return fAddress; }
            set { SetPropertyValue<string>(nameof(Address), ref fAddress, value); }
        }
        string fOverflow;
        [Size(50)]
        public string Overflow
        {
            get { return fOverflow; }
            set { SetPropertyValue<string>(nameof(Overflow), ref fOverflow, value); }
        }
        string fCity;
        [Size(50)]
        public string City
        {
            get { return fCity; }
            set { SetPropertyValue<string>(nameof(City), ref fCity, value); }
        }
        string fState;
        [Size(2)]
        public string State
        {
            get { return fState; }
            set { SetPropertyValue<string>(nameof(State), ref fState, value); }
        }
        string fZip_Code;
        [Size(9)]
        public string Zip_Code
        {
            get { return fZip_Code; }
            set { SetPropertyValue<string>(nameof(Zip_Code), ref fZip_Code, value); }
        }
        int fZone;
        public int Zone
        {
            get { return fZone; }
            set { SetPropertyValue<int>(nameof(Zone), ref fZone, value); }
        }
        pl_Country fCountry;
        [Association(@"SL_MainReferencespl_Country")]
        public pl_Country Country
        {
            get { return fCountry; }
            set { SetPropertyValue<pl_Country>(nameof(Country), ref fCountry, value); }
        }
        string fContact;
        [Size(50)]
        public string Contact
        {
            get { return fContact; }
            set { SetPropertyValue<string>(nameof(Contact), ref fContact, value); }
        }
        string fPhone_Number;
        [Size(50)]
        public string Phone_Number
        {
            get { return fPhone_Number; }
            set { SetPropertyValue<string>(nameof(Phone_Number), ref fPhone_Number, value); }
        }
        bool fSalesman_Call_Requested;
        public bool Salesman_Call_Requested
        {
            get { return fSalesman_Call_Requested; }
            set { SetPropertyValue<bool>(nameof(Salesman_Call_Requested), ref fSalesman_Call_Requested, value); }
        }
        bool fCatalogue_Requested;
        public bool Catalogue_Requested
        {
            get { return fCatalogue_Requested; }
            set { SetPropertyValue<bool>(nameof(Catalogue_Requested), ref fCatalogue_Requested, value); }
        }
        DateTime fCatalogue_Send;
        public DateTime Catalogue_Send
        {
            get { return fCatalogue_Send; }
            set { SetPropertyValue<DateTime>(nameof(Catalogue_Send), ref fCatalogue_Send, value); }
        }
        bool fAssigned_Salesman;
        public bool Assigned_Salesman
        {
            get { return fAssigned_Salesman; }
            set { SetPropertyValue<bool>(nameof(Assigned_Salesman), ref fAssigned_Salesman, value); }
        }
        SM_Main fSalesman;
        [Association(@"SL_MainReferencesSM_Main")]
        public SM_Main Salesman
        {
            get { return fSalesman; }
            set { SetPropertyValue<SM_Main>(nameof(Salesman), ref fSalesman, value); }
        }
        DateTime fSalesman_Date_Sent;
        public DateTime Salesman_Date_Sent
        {
            get { return fSalesman_Date_Sent; }
            set { SetPropertyValue<DateTime>(nameof(Salesman_Date_Sent), ref fSalesman_Date_Sent, value); }
        }
        DateTime fDate_Requested;
        public DateTime Date_Requested
        {
            get { return fDate_Requested; }
            set { SetPropertyValue<DateTime>(nameof(Date_Requested), ref fDate_Requested, value); }
        }
        bool fPrinted;
        public bool Printed
        {
            get { return fPrinted; }
            set { SetPropertyValue<bool>(nameof(Printed), ref fPrinted, value); }
        }
        DateTime fDate_Sent;
        public DateTime Date_Sent
        {
            get { return fDate_Sent; }
            set { SetPropertyValue<DateTime>(nameof(Date_Sent), ref fDate_Sent, value); }
        }
        string fComment;
        [Size(250)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>(nameof(Comment), ref fComment, value); }
        }
        UD_Main fUser_Name;
        [Association(@"SL_MainReferencesUD_Main")]
        public UD_Main User_Name
        {
            get { return fUser_Name; }
            set { SetPropertyValue<UD_Main>(nameof(User_Name), ref fUser_Name, value); }
        }
        Guid fSales_Territory;
        public Guid Sales_Territory
        {
            get { return fSales_Territory; }
            set { SetPropertyValue<Guid>(nameof(Sales_Territory), ref fSales_Territory, value); }
        }
        string fAlpha;
        [Size(1)]
        public string Alpha
        {
            get { return fAlpha; }
            set { SetPropertyValue<string>(nameof(Alpha), ref fAlpha, value); }
        }
    }

}
